---
import { getCollection } from "astro:content";
import { SITE_DESCRIPTION, SITE_IMG, SITE_TITLE } from "../../consts/consts";
import Layout from "../../layouts/Layout.astro";
import { formatDate } from "../../functions/date";
import { blogs } from "../../consts/blogs";

const posts = (await getCollection("blog")).sort(
  (a, b) => b.data.publishedDate.valueOf() - a.data.publishedDate.valueOf()
);

// Convert internal posts to a common format
const internalPosts = posts.map((post) => ({
  title: post.data.title,
  description: post.data.description,
  publishedDate: post.data.publishedDate,
  url: `/blog/${post.id}/`,
  isExternal: false,
  site: undefined,
}));

// Convert external posts to a common format
const externalPosts = blogs.map((blog) => ({
  title: blog.title,
  description: "", // External posts don't have descriptions in this context
  publishedDate: new Date(blog.publishedAt),
  url: blog.link,
  site: blog.site,
  isExternal: true,
}));

// Combine and sort all posts by date
const allPosts = [...internalPosts, ...externalPosts].toSorted(
  (a, b) => b.publishedDate.valueOf() - a.publishedDate.valueOf()
);
---

<Layout
  title={`Blog - ${SITE_TITLE}`}
  description={SITE_DESCRIPTION}
  image={SITE_IMG}
>
  <div class="blog-index">
    <div class="blog-header">
      <h1>Blog</h1>
    </div>

    <ul class="posts-list">
      {
        allPosts.map((post) => (
          <li class="post-item">
            <a
              href={post.url}
              class="post-link"
              target={post.isExternal ? "_blank" : undefined}
              rel={post.isExternal ? "noreferrer" : undefined}
            >
              <div class="post-content">
                <p class="post-title">{post.title}</p>
                {post.description && (
                  <p class="post-description">{post.description}</p>
                )}
              </div>
              <div class="post-meta">
                <time class="post-date">{formatDate(post.publishedDate)}</time>
                {post.isExternal && <span class="post-site">{post.site}</span>}
              </div>
            </a>
          </li>
        ))
      }
    </ul>
  </div>
</Layout>

<style>
  .blog-index {
    max-width: var(--content-width);
    margin: 0 auto;
    padding: 2rem 1rem;
    container-type: inline-size;
  }

  .blog-header {
    text-align: center;
    margin-bottom: 3rem;
  }

  .blog-header h1 {
    font-size: 3rem;
    margin-bottom: 1rem;
    color: var(--color-accent);
  }

  .blog-header p {
    color: var(--color-muted);
    font-size: 1.125rem;
  }

  .posts-list {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
    gap: 2rem;
    align-items: stretch;
  }

  .post-item {
    position: relative;
    transition: var(--transition-fast);
    border-radius: 0.5rem;
    background: var(--color-surface);
    border: 1px solid var(--color-border);
    display: flex;
    flex-direction: column;
  }

  .post-item:hover {
    transform: translateY(-2px);
  }

  .post-item:focus-within {
    transform: translateY(-2px);
  }

  .post-link {
    display: flex;
    flex-direction: column;
    padding: 0.75rem 1rem;
    text-decoration: none;
    color: inherit;
    height: 100%;
    transition: var(--transition-fast);
    min-height: 140px;
  }

  .post-content {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .post-title {
    color: var(--color-text);
    margin: 0;
    font-size: 1.25rem;
    font-weight: 600;
    line-height: 1.3;
    transition: var(--transition-fast);
  }

  .post-link:hover .post-title {
    color: var(--color-accent);
  }

  .post-link:focus .post-title {
    color: var(--color-accent);
  }

  .post-description {
    color: var(--color-muted);
    margin: 0;
    line-height: 1.6;
  }

  .post-date {
    color: var(--color-muted);
    font-family: var(--font-code);
    font-size: 0.875rem;
  }

  .post-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 1rem;
    margin-top: 1rem;
    flex-shrink: 0;
  }

  .post-site {
    color: var(--color-accent);
    font-family: var(--font-code);
    font-size: 0.8rem;
    font-weight: 500;
    background: var(--color-surface);
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    border: 1px solid var(--color-border);
  }

  /* Container queries for responsive design */
  @container (max-width: 768px) {
    .blog-index {
      padding: 1rem;
    }

    .blog-header h1 {
      font-size: 2.5rem;
    }

    .blog-header {
      margin-bottom: 2rem;
    }

    .posts-list {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }

    .post-link {
      padding: 1rem;
      min-height: 120px;
    }

    .post-title {
      font-size: 1.125rem;
    }
  }
</style>
